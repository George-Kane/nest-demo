# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateFeedbackInput {
  dislike_grant_ids: [Float!]
  feedback: String!
  like_grant_ids: [Float!]
}

input CreateUserInput {
  nickname: String!
  password: String!
  refreshToken: String
  role: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Feedback {
  created_at: DateTime!
  dislike_grant_ids: [Float!]
  feedback: String!
  id: ID!
  like_grant_ids: [Float!]
  updated_at: DateTime!
}

input GetManyInput {
  """
  {key: "ASC" or "DESC" or "asc" or "desc" or 1 or -1} or {key: {direction: "ASC" or "DESC" or "asc" or "desc", nulls: "first" or "last" or "FIRST" or "LAST"}}}
  """
  order: JSON
  pagination: IPagination
  where: JSON
}

input GetOneInput {
  where: JSON!
}

type GetUserType {
  count: Float
  data: [User!]
}

type Grant {
  areasOfFunding: [String!]!
  avgAmount: Float!
  deadline: DateTime!
  foundation: String!
  id: Float!
  location: String!
  matchDate: DateTime!
  status: String!
  title: String!
}

input IPagination {
  """
  Started from 0
  """
  page: Int!

  """
  Size of page
  """
  size: Int!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type JwtWithUser {
  jwt: String!
  user: User!
}

type Mutation {
  createFeedback(createFeedbackInput: CreateFeedbackInput!): Feedback!
  createGrant(
    amount: Float!
    areasOfFunding: [String!]!
    deadline: DateTime!
    description: String!
    title: String!
  ): Grant!
  createUser(input: CreateUserInput!): User!
  deleteFiles(keys: [String!]!): Boolean!
  deleteUser(id: String!): JSON!
  refreshAccessToken: JwtWithUser!
  removeGrant(id: Float!): Boolean!
  signIn(input: SignInInput!): JwtWithUser!
  signOut: Boolean!
  signUp(input: SignUpInput!): JwtWithUser!
  updateUser(id: String!, input: UpdateUserInput!): JSON!
  uploadFile(file: Upload!): String!
  uploadFiles(files: [Upload!]!): [String!]!
}

type Query {
  feedback(id: ID!): Feedback!
  feedbacks: [Feedback!]!
  getManyUserList(input: GetManyInput): GetUserType!
  getMe: User!
  getOneUser(input: GetOneInput!): User!
  grant(id: Float!): Grant!
  grants: [Grant!]!
}

input SignInInput {
  password: String!
  username: String!
}

input SignUpInput {
  nickname: String!
  password: String!
  username: String!
}

input UpdateUserInput {
  nickname: String
  password: String
  refreshToken: String
  role: String
  username: String
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

type User {
  createdAt: DateTime!
  id: ID!
  nickname: String!
  refreshToken: String
  role: String!
  updatedAt: DateTime!
  username: String!
}
